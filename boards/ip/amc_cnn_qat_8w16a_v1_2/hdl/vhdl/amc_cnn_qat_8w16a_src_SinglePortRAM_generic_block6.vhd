-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/model_qat_2x2_w8a16/amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block6.vhd
-- Created: 2025-02-27 23:58:37
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block6
-- Source Path: model_qat_2x2_w8a16/DUT HDL/Dense Layer 2/Dense Layer 2/Weight Storage 5/SinglePortRAM_generic
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block6 IS
  GENERIC( AddrWidth                      : integer := 1;
           DataWidth                      : integer := 1
           );
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
        addr                              :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
        we                                :   IN    std_logic;  -- ufix1
        dout                              :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
        );
END amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block6;


ARCHITECTURE rtl OF amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block6 IS

  -- Local Type Definitions
  TYPE ram_type IS ARRAY (2**AddrWidth - 1 DOWNTO 0) of std_logic_vector(DataWidth - 1 DOWNTO 0);

  -- Signals
  SIGNAL ram                              : ram_type := (X"0b", X"13", X"0f", X"05", X"fb", X"09", X"32", X"fc", X"2b", X"c2", X"01", X"f1", X"28", X"04", X"04", X"f8", X"b9", X"35", X"1d", X"21", X"e7", X"eb", X"0a", X"d8", X"07", X"3c",
                                                        X"f8", X"08", X"25", X"03", X"ed", X"0b", X"f0", X"ef", X"f3", X"24", X"f9", X"eb", X"f8", X"f8", X"f9", X"1c", X"e3", X"f7", X"03", X"ed", X"fd", X"f4", X"0f", X"14", X"13", X"f1",
                                                        X"14", X"f1", X"27", X"29", X"dc", X"fa", X"f9", X"13", X"fa", X"2b", X"07", X"35", X"f3", X"f0", X"0e", X"f9", X"01", X"06", X"f5", X"f5", X"f4", X"19", X"f7", X"29", X"fe", X"c8",
                                                        X"e1", X"ce", X"f2", X"f1", X"01", X"f9", X"37", X"ec", X"06", X"21", X"f3", X"32", X"fe", X"16", X"fb", X"fc", X"f7", X"31", X"32", X"e1", X"16", X"10", X"04", X"f8", X"fa", X"1e",
                                                        X"04", X"fc", X"e2", X"ef", X"1d", X"22", X"09", X"ea", X"f3", X"13", X"f8", X"ff", X"f4", X"ec", X"fa", X"1c", X"0a", X"f8", X"f6", X"15", X"24", X"1c", X"fa", X"1a");
  SIGNAL data_int                         : std_logic_vector(DataWidth - 1 DOWNTO 0) := X"1a";
  SIGNAL addr_unsigned                    : unsigned(AddrWidth - 1 DOWNTO 0);  -- generic width

BEGIN
  addr_unsigned <= unsigned(addr);

  SinglePortRAM_generic_process: PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        IF we = '1' THEN
          ram(to_integer(addr_unsigned)) <= din;
          data_int <= din;
        ELSE
          data_int <= ram(to_integer(addr_unsigned));
        END IF;
      END IF;
    END IF;
  END PROCESS SinglePortRAM_generic_process;

  dout <= data_int;

END rtl;

