-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/model_qat_2x2_w8a16/amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block8.vhd
-- Created: 2025-02-27 23:58:37
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block8
-- Source Path: model_qat_2x2_w8a16/DUT HDL/Dense Layer 2/Dense Layer 2/Weight Storage 7/SinglePortRAM_generic
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block8 IS
  GENERIC( AddrWidth                      : integer := 1;
           DataWidth                      : integer := 1
           );
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
        addr                              :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
        we                                :   IN    std_logic;  -- ufix1
        dout                              :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
        );
END amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block8;


ARCHITECTURE rtl OF amc_cnn_qat_8w16a_src_SinglePortRAM_generic_block8 IS

  -- Local Type Definitions
  TYPE ram_type IS ARRAY (2**AddrWidth - 1 DOWNTO 0) of std_logic_vector(DataWidth - 1 DOWNTO 0);

  -- Signals
  SIGNAL ram                              : ram_type := (X"d5", X"de", X"0c", X"09", X"40", X"d6", X"fe", X"52", X"e1", X"b2", X"c0", X"ec", X"fe", X"d9", X"d8", X"e8", X"c7", X"d9", X"eb", X"d9", X"08", X"f4", X"06", X"bf", X"d1", X"d6",
                                                        X"30", X"de", X"e1", X"15", X"dc", X"e9", X"36", X"55", X"e5", X"de", X"4e", X"f4", X"fe", X"07", X"04", X"f5", X"f2", X"53", X"fa", X"f7", X"d4", X"54", X"d9", X"c8", X"f2", X"48",
                                                        X"ed", X"f6", X"08", X"fa", X"0a", X"55", X"4a", X"ff", X"46", X"f3", X"0e", X"f0", X"55", X"d8", X"fc", X"fa", X"06", X"e3", X"e5", X"32", X"f5", X"eb", X"07", X"fc", X"db", X"ba",
                                                        X"fd", X"12", X"ca", X"f6", X"c2", X"02", X"f7", X"ea", X"fa", X"dd", X"2d", X"f7", X"e3", X"ff", X"55", X"f5", X"29", X"fd", X"fd", X"1c", X"ea", X"dd", X"15", X"d2", X"55", X"fb",
                                                        X"ff", X"ff", X"0b", X"d8", X"ec", X"03", X"ce", X"fe", X"55", X"e4", X"e4", X"c5", X"f5", X"2d", X"0c", X"eb", X"dc", X"0d", X"f1", X"f0", X"c6", X"fc", X"d8", X"ee");
  SIGNAL data_int                         : std_logic_vector(DataWidth - 1 DOWNTO 0) := X"ee";
  SIGNAL addr_unsigned                    : unsigned(AddrWidth - 1 DOWNTO 0);  -- generic width

BEGIN
  addr_unsigned <= unsigned(addr);

  SinglePortRAM_generic_process: PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        IF we = '1' THEN
          ram(to_integer(addr_unsigned)) <= din;
          data_int <= din;
        ELSE
          data_int <= ram(to_integer(addr_unsigned));
        END IF;
      END IF;
    END IF;
  END PROCESS SinglePortRAM_generic_process;

  dout <= data_int;

END rtl;

