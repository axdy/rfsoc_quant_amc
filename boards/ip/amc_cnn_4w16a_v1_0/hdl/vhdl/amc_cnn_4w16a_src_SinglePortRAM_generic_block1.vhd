-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/amc_model_w4a16/amc_cnn_4w16a_src_SinglePortRAM_generic_block1.vhd
-- Created: 2023-06-15 16:02:53
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_4w16a_src_SinglePortRAM_generic_block1
-- Source Path: amc_model_w4a16/DUT HDL/Dense Layer 2/Dense Layer 2/Weight Storage 0/SinglePortRAM_generic
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY amc_cnn_4w16a_src_SinglePortRAM_generic_block1 IS
  GENERIC( AddrWidth                      : integer := 1;
           DataWidth                      : integer := 1
           );
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
        addr                              :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
        we                                :   IN    std_logic;  -- ufix1
        dout                              :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
        );
END amc_cnn_4w16a_src_SinglePortRAM_generic_block1;


ARCHITECTURE rtl OF amc_cnn_4w16a_src_SinglePortRAM_generic_block1 IS

  -- Local Type Definitions
  TYPE ram_type IS ARRAY (2**AddrWidth - 1 DOWNTO 0) of std_logic_vector(DataWidth - 1 DOWNTO 0);

  -- Signals
  SIGNAL ram                              : ram_type := (X"0a", X"fe", X"d4", X"26", X"18", X"e6", X"ee", X"f9", X"29", X"2f", X"e2", X"e1", X"f7", X"03", X"05", X"e0", X"cd", X"f1", X"f9", X"e5", X"fd", X"f0", X"01", X"20", X"ed", X"e9",
                                                        X"01", X"06", X"e6", X"0b", X"e4", X"e4", X"f1", X"f1", X"fd", X"d9", X"e8", X"f4", X"e3", X"e1", X"1d", X"0a", X"e5", X"3a", X"e1", X"02", X"00", X"f8", X"f0", X"eb", X"19", X"f7",
                                                        X"d7", X"e3", X"01", X"13", X"ef", X"d6", X"f4", X"da", X"f5", X"d4", X"e3", X"ec", X"fe", X"16", X"eb", X"ef", X"fc", X"ed", X"10", X"38", X"ee", X"eb", X"fa", X"e8", X"f3", X"fc",
                                                        X"eb", X"e2", X"09", X"04", X"ee", X"fa", X"0a", X"12", X"fd", X"fa", X"ee", X"ed", X"e5", X"27", X"25", X"27", X"31", X"e5", X"1a", X"e0", X"e8", X"21", X"0d", X"f8", X"e4", X"f1",
                                                        X"f4", X"e2", X"f0", X"d9", X"d6", X"da", X"ea", X"21", X"e3", X"0a", X"f5", X"36", X"09", X"e0", X"0a", X"f9", X"d0", X"11", X"e4", X"05", X"0c", X"ff", X"f1", X"0f");
  SIGNAL data_int                         : std_logic_vector(DataWidth - 1 DOWNTO 0) := X"0f";
  SIGNAL addr_unsigned                    : unsigned(AddrWidth - 1 DOWNTO 0);  -- generic width

BEGIN
  addr_unsigned <= unsigned(addr);

  SinglePortRAM_generic_process: PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        IF we = '1' THEN
          ram(to_integer(addr_unsigned)) <= din;
          data_int <= din;
        ELSE
          data_int <= ram(to_integer(addr_unsigned));
        END IF;
      END IF;
    END IF;
  END PROCESS SinglePortRAM_generic_process;

  dout <= data_int;

END rtl;

