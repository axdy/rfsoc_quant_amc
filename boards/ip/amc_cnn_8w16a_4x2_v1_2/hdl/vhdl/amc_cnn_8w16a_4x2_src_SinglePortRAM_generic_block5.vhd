-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/amc_model_w8a16_4x2/amc_cnn_8w16a_4x2_src_SinglePortRAM_generic_block5.vhd
-- Created: 2024-11-05 16:19:09
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_8w16a_4x2_src_SinglePortRAM_generic_block5
-- Source Path: amc_model_w8a16_4x2/DUT HDL/Dense Layer 2/Dense Layer 2/Weight Storage 4/SinglePortRAM_generic
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY amc_cnn_8w16a_4x2_src_SinglePortRAM_generic_block5 IS
  GENERIC( AddrWidth                      : integer := 1;
           DataWidth                      : integer := 1
           );
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
        addr                              :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
        we                                :   IN    std_logic;  -- ufix1
        dout                              :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
        );
END amc_cnn_8w16a_4x2_src_SinglePortRAM_generic_block5;


ARCHITECTURE rtl OF amc_cnn_8w16a_4x2_src_SinglePortRAM_generic_block5 IS

  -- Local Type Definitions
  TYPE ram_type IS ARRAY (2**AddrWidth - 1 DOWNTO 0) of std_logic_vector(DataWidth - 1 DOWNTO 0);

  -- Signals
  SIGNAL ram                              : ram_type := (X"18", X"c6", X"13", X"e2", X"df", X"d6", X"fe", X"f3", X"fd", X"d7", X"01", X"fc", X"ff", X"08", X"ef", X"05", X"d2", X"f9", X"04", X"ee", X"ff", X"f2", X"03", X"de", X"f2", X"01",
                                                        X"fc", X"06", X"04", X"f5", X"2a", X"fe", X"ee", X"eb", X"ff", X"06", X"01", X"d7", X"02", X"f8", X"da", X"fa", X"f0", X"f8", X"09", X"f0", X"08", X"e4", X"02", X"22", X"e6", X"04",
                                                        X"01", X"d6", X"17", X"d0", X"1e", X"05", X"f7", X"f1", X"04", X"d6", X"c0", X"ef", X"ef", X"01", X"f3", X"eb", X"06", X"fe", X"03", X"1a", X"ec", X"22", X"00", X"04", X"ef", X"01",
                                                        X"0b", X"2d", X"f4", X"ec", X"dc", X"02", X"e8", X"de", X"ef", X"fe", X"16", X"eb", X"f9", X"f9", X"f3", X"e0", X"05", X"fd", X"21", X"ef", X"01", X"fc", X"cb", X"00", X"f1", X"f4",
                                                        X"ee", X"09", X"e1", X"f5", X"09", X"18", X"f7", X"07", X"f8", X"16", X"ff", X"df", X"e7", X"f8", X"dc", X"01", X"ee", X"d1", X"e8", X"f0", X"df", X"00", X"d7", X"e2");
  SIGNAL data_int                         : std_logic_vector(DataWidth - 1 DOWNTO 0) := X"e2";
  SIGNAL addr_unsigned                    : unsigned(AddrWidth - 1 DOWNTO 0);  -- generic width

BEGIN
  addr_unsigned <= unsigned(addr);

  SinglePortRAM_generic_process: PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        IF we = '1' THEN
          ram(to_integer(addr_unsigned)) <= din;
          data_int <= din;
        ELSE
          data_int <= ram(to_integer(addr_unsigned));
        END IF;
      END IF;
    END IF;
  END PROCESS SinglePortRAM_generic_process;

  dout <= data_int;

END rtl;

